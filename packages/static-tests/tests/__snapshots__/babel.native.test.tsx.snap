// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`basic conditional extraction 1`] = `
"const __ReactNativeStyleSheet = require('react-native').StyleSheet;
const _sheet = __ReactNativeStyleSheet.create({
  \\"0\\": {
    \\"flexDirection\\": \\"column\\"
  },
  \\"1\\": {
    \\"backgroundColor\\": \\"red\\"
  },
  \\"2\\": {
    \\"backgroundColor\\": \\"blue\\"
  },
  \\"3\\": {
    \\"flexDirection\\": \\"column\\"
  },
  \\"4\\": {
    \\"backgroundColor\\": \\"red\\"
  },
  \\"5\\": {}
});
const __ReactNativeView = require('react-native').View;
const __ReactNativeText = require('react-native').Text;
import { YStack } from 'tamagui';
export function Test() {
  return <>
          <__ReactNativeView style={[_sheet[\\"0\\"], x ? _sheet[\\"1\\"] : _sheet[\\"2\\"]]} />
          <__ReactNativeView style={[_sheet[\\"3\\"], x ? _sheet[\\"4\\"] : _sheet[\\"5\\"]]} />
        </>;
}"
`;

exports[`basic extraction 1`] = `
"const __ReactNativeStyleSheet = require('react-native').StyleSheet;
const _sheet = __ReactNativeStyleSheet.create({
  \\"0\\": {
    \\"flexDirection\\": \\"column\\",
    \\"backgroundColor\\": \\"red\\"
  }
});
const __ReactNativeView = require('react-native').View;
const __ReactNativeText = require('react-native').Text;
import { YStack } from 'tamagui';
export function Test() {
  return <__ReactNativeView style={_sheet[\\"0\\"]} />;
}"
`;

exports[`flat transform props 1`] = `
"const __ReactNativeStyleSheet = require('react-native').StyleSheet;
const _sheet = __ReactNativeStyleSheet.create({
  \\"0\\": {
    \\"flexDirection\\": \\"column\\"
  },
  \\"1\\": {
    \\"transform\\": [{
      \\"scale\\": 1
    }]
  },
  \\"2\\": {
    \\"transform\\": [{
      \\"scale\\": 2
    }]
  },
  \\"3\\": {
    \\"transform\\": [{
      \\"translateY\\": 20
    }, {
      \\"translateX\\": 10
    }, {
      \\"rotate\\": \\"10deg\\"
    }]
  }
});
const __ReactNativeView = require('react-native').View;
const __ReactNativeText = require('react-native').Text;
import { YStack } from 'tamagui';
export function Test(isLoading) {
  return <__ReactNativeView style={[_sheet[\\"0\\"], isLoading ? _sheet[\\"1\\"] : _sheet[\\"2\\"], _sheet[\\"3\\"]]} />;
}"
`;

exports[`handles style order merge properly 1`] = `
"const __ReactNativeView = require('react-native').View;
const __ReactNativeText = require('react-native').Text;
import { YStack } from 'tamagui';
export function Test(props) {
  return <YStack scale={props.isLoading ? 1 : 2} x={10} {...props} rotate=\\"10deg\\" />;
}"
`;

exports[`normalize ternaries flips the conditional properly 1`] = `
"const __ReactNativeStyleSheet = require('react-native').StyleSheet;
const _sheet = __ReactNativeStyleSheet.create({
  \\"0\\": {},
  \\"1\\": {
    \\"marginBottom\\": 0
  },
  \\"2\\": {
    \\"marginBottom\\": 12
  }
});
const __ReactNativeView = require('react-native').View;
const __ReactNativeText = require('react-native').Text;
import { Stack } from 'tamagui';
export function Test(props) {
  return <__ReactNativeView style={[_sheet[\\"0\\"], props === 123 ? _sheet[\\"1\\"] : _sheet[\\"2\\"]]} />;
}"
`;

exports[`theme value extraction should NOT work when theme variables used 1`] = `
"const __ReactNativeView = require('react-native').View;
const __ReactNativeText = require('react-native').Text;
import { Paragraph } from 'tamagui';
export function Test() {
  return <Paragraph>hello world</Paragraph>;
}"
`;

exports[`theme value extraction should work when no theme variables used 1`] = `
"const __ReactNativeView = require('react-native').View;
const __ReactNativeText = require('react-native').Text;
import { Paragraph } from 'tamagui';
export function Test() {
  return <Paragraph color=\\"red\\">hello world</Paragraph>;
}"
`;
