// Vitest Snapshot v1

exports[`basic conditional extraction 1`] = `
"import { StyleSheet as ReactNativeStyleSheet } from 'react-native';
const _sheet = ReactNativeStyleSheet.create({
  \\"0\\": {},
  \\"1\\": {
    \\"alignItems\\": \\"stretch\\",
    \\"flexShrink\\": 0,
    \\"display\\": \\"flex\\",
    \\"flexBasis\\": \\"auto\\",
    \\"position\\": \\"relative\\",
    \\"minHeight\\": 0,
    \\"minWidth\\": 0,
    \\"flexDirection\\": \\"column\\"
  },
  \\"2\\": {
    \\"backgroundColor\\": \\"rgba(255,0,0,1.00)\\"
  },
  \\"3\\": {
    \\"backgroundColor\\": \\"rgba(0,0,255,1.00)\\"
  },
  \\"4\\": {},
  \\"5\\": {
    \\"alignItems\\": \\"stretch\\",
    \\"flexShrink\\": 0,
    \\"display\\": \\"flex\\",
    \\"flexBasis\\": \\"auto\\",
    \\"position\\": \\"relative\\",
    \\"minHeight\\": 0,
    \\"minWidth\\": 0,
    \\"flexDirection\\": \\"column\\"
  },
  \\"6\\": {
    \\"backgroundColor\\": \\"rgba(255,0,0,1.00)\\"
  },
  \\"7\\": {}
});
import { View as __ReactNativeView, Text as __ReactNativeText } from 'react-native';
import { YStack } from 'tamagui';
export function Test() {
  return <>
          <__ReactNativeView style={[_sheet[\\"0\\"], _sheet[\\"1\\"], x ? _sheet[\\"2\\"] : _sheet[\\"3\\"]]} />
          <__ReactNativeView style={[_sheet[\\"4\\"], _sheet[\\"5\\"], x ? _sheet[\\"6\\"] : _sheet[\\"7\\"]]} />
        </>;
}"
`;

exports[`basic extraction 1`] = `
"import { StyleSheet as ReactNativeStyleSheet } from 'react-native';
const _sheet = ReactNativeStyleSheet.create({
  \\"0\\": {},
  \\"1\\": {
    \\"alignItems\\": \\"stretch\\",
    \\"flexShrink\\": 0,
    \\"display\\": \\"flex\\",
    \\"flexBasis\\": \\"auto\\",
    \\"position\\": \\"relative\\",
    \\"minHeight\\": 0,
    \\"minWidth\\": 0,
    \\"flexDirection\\": \\"column\\",
    \\"backgroundColor\\": \\"rgba(255,0,0,1.00)\\"
  }
});
import { View as __ReactNativeView, Text as __ReactNativeText } from 'react-native';
import { YStack } from 'tamagui';
export function Test() {
  return <__ReactNativeView style={[_sheet[\\"0\\"], _sheet[\\"1\\"]]} />;
}"
`;

exports[`flat transform props 1`] = `
"import { StyleSheet as ReactNativeStyleSheet } from 'react-native';
const _sheet = ReactNativeStyleSheet.create({
  \\"0\\": {},
  \\"1\\": {
    \\"alignItems\\": \\"stretch\\",
    \\"flexShrink\\": 0,
    \\"display\\": \\"flex\\",
    \\"flexBasis\\": \\"auto\\",
    \\"position\\": \\"relative\\",
    \\"minHeight\\": 0,
    \\"minWidth\\": 0,
    \\"flexDirection\\": \\"column\\"
  },
  \\"2\\": {
    \\"transform\\": [{
      \\"scale\\": 1
    }]
  },
  \\"3\\": {
    \\"transform\\": [{
      \\"scale\\": 2
    }]
  },
  \\"4\\": {
    \\"transform\\": [{
      \\"translateY\\": 20
    }, {
      \\"translateX\\": 10
    }, {
      \\"rotate\\": \\"10deg\\"
    }]
  }
});
import { View as __ReactNativeView, Text as __ReactNativeText } from 'react-native';
import { YStack } from 'tamagui';
export function Test(isLoading) {
  return <__ReactNativeView style={[_sheet[\\"0\\"], _sheet[\\"1\\"], isLoading ? _sheet[\\"2\\"] : _sheet[\\"3\\"], _sheet[\\"4\\"]]} />;
}"
`;

exports[`handles style order merge properly 1`] = `
"import { View as __ReactNativeView, Text as __ReactNativeText } from 'react-native';
import { YStack } from 'tamagui';
export function Test(props) {
  return <YStack scale={props.isLoading ? 1 : 2} x={10} {...props} rotate=\\"10deg\\" />;
}"
`;

exports[`normalize ternaries flips the conditional properly 1`] = `
"import { StyleSheet as ReactNativeStyleSheet } from 'react-native';
const _sheet = ReactNativeStyleSheet.create({
  \\"0\\": {},
  \\"1\\": {
    \\"alignItems\\": \\"stretch\\",
    \\"flexShrink\\": 0,
    \\"display\\": \\"flex\\",
    \\"flexBasis\\": \\"auto\\",
    \\"position\\": \\"relative\\",
    \\"minHeight\\": 0,
    \\"minWidth\\": 0,
    \\"flexDirection\\": \\"column\\"
  },
  \\"2\\": {
    \\"marginBottom\\": 0
  },
  \\"3\\": {
    \\"marginBottom\\": 12
  }
});
import { View as __ReactNativeView, Text as __ReactNativeText } from 'react-native';
import { Stack } from 'tamagui';
export function Test(props) {
  return <__ReactNativeView style={[_sheet[\\"0\\"], _sheet[\\"1\\"], props === 123 ? _sheet[\\"2\\"] : _sheet[\\"3\\"]]} />;
}"
`;

exports[`theme value extraction should NOT work when theme variables used 1`] = `
"import { View as __ReactNativeView, Text as __ReactNativeText } from 'react-native';
import { Paragraph } from 'tamagui';
export function Test() {
  return <Paragraph>hello world</Paragraph>;
}"
`;

exports[`theme value extraction should work when no theme variables used 1`] = `
"import { View as __ReactNativeView, Text as __ReactNativeText } from 'react-native';
import { Paragraph } from 'tamagui';
export function Test() {
  return <Paragraph color=\\"red\\">hello world</Paragraph>;
}"
`;
