import * as React from 'react';
import { PlatformMethods } from '../../types';
declare const TextInput: React.ForwardRefExoticComponent<{
    autoCapitalize?: "none" | "characters" | "sentences" | "words" | undefined;
    autoComplete?: string | null | undefined;
    autoCompleteType?: string | null | undefined;
    autoCorrect?: boolean | null | undefined;
    autoFocus?: boolean | null | undefined;
    blurOnSubmit?: boolean | null | undefined;
    clearTextOnFocus?: boolean | null | undefined;
    defaultValue?: string | null | undefined;
    dir?: "ltr" | "rtl" | "auto" | null | undefined;
    disabled?: boolean | null | undefined;
    editable?: boolean | null | undefined;
    inputAccessoryViewID?: string | null | undefined;
    keyboardType?: "search" | "default" | "url" | "numeric" | "email-address" | "number-pad" | "numbers-and-punctuation" | "phone-pad" | "web-search" | undefined;
    maxLength?: number | null | undefined;
    multiline?: boolean | null | undefined;
    numberOfLines?: number | null | undefined;
    onChange?: ((e: any) => void) | undefined;
    onChangeText?: ((e: string) => void) | undefined;
    onContentSizeChange?: ((e: any) => void) | undefined;
    onEndEditing?: ((e: any) => void) | undefined;
    onKeyPress?: ((e: any) => void) | undefined;
    onSelectionChange?: ((e: any) => void) | undefined;
    onScroll?: ((e: any) => void) | undefined;
    onSubmitEditing?: ((e: any) => void) | undefined;
    placeholder?: string | null | undefined;
    placeholderTextColor?: import("../../types").ColorValue | undefined;
    returnKeyType?: "search" | "enter" | "done" | "go" | "next" | "previous" | "send" | undefined;
    secureTextEntry?: boolean | null | undefined;
    selectTextOnFocus?: boolean | null | undefined;
    selection?: {
        start: number;
        end?: number | undefined;
    } | undefined;
    selectionColor?: import("../../types").ColorValue | undefined;
    spellCheck?: boolean | null | undefined;
    style?: import("../../types").GenericStyleProp<import("./types").TextInputStyle> | undefined;
    value?: string | null | undefined;
} & {
    children?: any;
    dir?: "ltr" | "rtl" | undefined;
    focusable?: boolean | null | undefined;
    lang?: string | undefined;
    nativeID?: string | null | undefined;
    onBlur?: ((e: any) => void) | undefined;
    onClick?: ((e: any) => void) | undefined;
    onClickCapture?: ((e: any) => void) | undefined;
    onContextMenu?: ((e: any) => void) | undefined;
    onFocus?: ((e: any) => void) | undefined;
    onKeyDown?: ((e: any) => void) | undefined;
    onKeyUp?: ((e: any) => void) | undefined;
    onLayout?: ((e: import("../../types").LayoutEvent) => void) | undefined;
    onMoveShouldSetResponder?: ((e: any) => boolean) | undefined;
    onMoveShouldSetResponderCapture?: ((e: any) => boolean) | undefined;
    onResponderEnd?: ((e: any) => void) | undefined;
    onResponderGrant?: ((e: any) => boolean | void) | undefined;
    onResponderMove?: ((e: any) => void) | undefined;
    onResponderReject?: ((e: any) => void) | undefined;
    onResponderRelease?: ((e: any) => void) | undefined;
    onResponderStart?: ((e: any) => void) | undefined;
    onResponderTerminate?: ((e: any) => void) | undefined;
    onResponderTerminationRequest?: ((e: any) => boolean) | undefined;
    onScrollShouldSetResponder?: ((e: any) => boolean) | undefined;
    onScrollShouldSetResponderCapture?: ((e: any) => boolean) | undefined;
    onSelectionChangeShouldSetResponder?: ((e: any) => boolean) | undefined;
    onSelectionChangeShouldSetResponderCapture?: ((e: any) => boolean) | undefined;
    onStartShouldSetResponder?: ((e: any) => boolean) | undefined;
    onStartShouldSetResponderCapture?: ((e: any) => boolean) | undefined;
    pointerEvents?: "auto" | "box-none" | "box-only" | "none" | undefined;
    style?: import("../../types").GenericStyleProp<import("../View/types").ViewStyle> | undefined;
    testID?: string | null | undefined;
    dataSet?: Object | null | undefined;
    onMouseDown?: ((e: any) => void) | undefined;
    onMouseEnter?: ((e: any) => void) | undefined;
    onMouseLeave?: ((e: any) => void) | undefined;
    onMouseMove?: ((e: any) => void) | undefined;
    onMouseOver?: ((e: any) => void) | undefined;
    onMouseOut?: ((e: any) => void) | undefined;
    onMouseUp?: ((e: any) => void) | undefined;
    onScroll?: ((e: any) => void) | undefined;
    onTouchCancel?: ((e: any) => void) | undefined;
    onTouchCancelCapture?: ((e: any) => void) | undefined;
    onTouchEnd?: ((e: any) => void) | undefined;
    onTouchEndCapture?: ((e: any) => void) | undefined;
    onTouchMove?: ((e: any) => void) | undefined;
    onTouchMoveCapture?: ((e: any) => void) | undefined;
    onTouchStart?: ((e: any) => void) | undefined;
    onTouchStartCapture?: ((e: any) => void) | undefined;
    onWheel?: ((e: any) => void) | undefined;
    href?: string | null | undefined;
    hrefAttrs?: {
        download?: boolean | null | undefined;
        rel?: string | null | undefined;
        target?: string | null | undefined;
    } | null | undefined;
} & import("../View/types").AccessibilityProps & React.RefAttributes<HTMLElement & PlatformMethods>>;
export default TextInput;
//# sourceMappingURL=index.d.ts.map